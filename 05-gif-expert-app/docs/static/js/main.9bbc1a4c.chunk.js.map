{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","gifs","data","map","img","id","images","downsized_medium","console","log","GifGrid","React","loading","state","setState","useEffect","then","imgs","useFetchGifs","animate__animated","animate__flash","GifExpertApp","categories","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA+BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAazC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OAExCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAhBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCKZG,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfN,EADe,iDAEuBO,UAAUF,GAFjC,+DAGFG,MAAMR,GAHJ,cAGfS,EAHe,gBAIFA,EAAKC,OAJH,cAIfA,EAJe,OAKfC,EAAOD,EAAKE,KAAKC,KAAI,SAACC,GAAS,IAAD,EAClC,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAGtCkB,QAAQC,IAAR,OAAoBR,GAZC,kBAadA,GAbc,4CAAH,sDCsBLS,EAlBC,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EACdgB,IAAMpC,SAAS,CACvC2B,KAAM,GACNU,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAZAC,qBAAU,WAERrB,EAAQC,GAAUqB,MAAK,SAACC,GAEtBH,EAAS,CACPZ,KAAMe,EACNL,SAAS,SAIZ,CAACjB,IAEGkB,EDjB2BK,CAAavB,GAAjCW,EAFkB,EAExBJ,KAAcU,EAFU,EAEVA,QAEtB,OACE,qCACE,oBAAIrB,UAAU,oCAAd,SAAmDI,IACjDiB,GAAW,mBAAGO,mBAAiB,EAACC,gBAAc,EAAnC,wBACb,qBAAK7B,UAAU,YAAf,SACGe,EAAOH,KAAI,SAACC,GAAD,OAEV,aADA,CACC,EAAD,eAA8BA,GAAZA,EAAIC,aEwBjBgB,EAnCM,WAAM,MAEW9C,mBAAS,CAAC,cAFrB,mBAElB+C,EAFkB,KAENhD,EAFM,KAUzB,OACE,qCACE,6CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAG5B,6BASGgD,EAAWnB,KAAI,SAACR,EAAU4B,GAAX,OACd,cAAC,EAAD,CAAiB5B,SAAUA,GAAb4B,Y,MCzBxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9bbc1a4c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      // limpio la caja de texto\n      setInputValue('');\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      ></input>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n  const url =\n    `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=y0rLWfZDCF9Un9HIAir0Za0anBgxD34k`;\n  const resp = await fetch(url);\n  const json = await resp.json();\n  const gifs = json.data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  console.log(`gifs`, gifs);\n  return gifs;\n};\n","import React from 'react';\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n  // const [images, setImages] = useState([]);\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      { loading && <p animate__animated animate__flash>Loading...</p> }\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          // <GifGridItem key={img.id} img={img} />\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","// agrupo logica\nimport React, { useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = React.useState({\n    data: [],\n    loading: true,\n  });\n  // los efectos nunca pueden ser async\n\n  useEffect(() => {\n    // getGifs(category).then((imgs) => setImages(imgs));\n    getGifs(category).then((imgs) => {\n      // setTimeout(() => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n      // }, 3000);\n    });\n  }, [category]); // cada vez que cambia la categorÃ­a se ejecuta el effect\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  // const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\n  const [categories, setCategories] = useState(['One Punch']);\n  // const handleAdd = () => {\n  //   // no debo mutarlo\n  //   // categories.push(\"HunterXHunter\");\n\n  //   // setCategories(['HunterXHunter', ...categories]);\n  //   setCategories((cats) => [...cats, 'HunterXHunter']);\n  // };\n  return (\n    <>\n      <h2>GifExpertAp</h2>\n      <hr />\n      {/* {JSON.stringify(categories)} */}\n      <AddCategory setCategories={setCategories} />\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n\n      <ol>\n        {/* {categories.map((category) => {\n          return <li key={category.id}>{category}</li>;\n        })} */}\n        {/*\n        {categories.map((category) => (\n          <li key={category}>{category}</li>\n        ))} */}\n\n        {categories.map((category, i) => (\n          <GifGrid key={i} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}